# Simple config file to test the parser.
# Not supposed to work on any particular robot configuration.
hbba_conf:

# Find the given file name, add it to the processed files list.
# The file attribute doesn't have to be a full path, it works like
# bash ros utils.
- include: {pkg: "hbba_synth", file: "common.yaml"}

# Root launch file includes, always included first in the generated main launch
# file (but still in order of appearance).
- include: {pkg: "hbba_synth", file: "base_nodes_r2.launch"}

# Root remaps: topics are tested according to these for the actual input/output
# topic names.
# If a target ("to") is already registered as a remap, the second registration
# will map to this value.
- remap: {from: 'look_at_pose', to: '/face/look_at_pose'}

- resources:
    CPU: 100
    sound: 1

#- behavior:
#    name: stop
#    launch: {pkg: "autonav", path: "stop.launch"}
#    output:
#        - cmd_vel
#    priority: 10

- behavior:
    name: look_at_voice
    launch: {pkg: "jn0_bringup", path: "launch/jn0_bhvr_look_at.launch"}
    input: # Automatically remapped to root.
        - pose: source_pose # The first is what the node listens to, the second its actual remap (to root).
        # Other syntax:
        - second_pose: {src: second_pose, filtered: false}
    output:
        - look_at_pose
    services:
        # Only provide basic remaps for services.
        # Still follow remap rules.
         - test_service

    priority: 10

- behavior:
    name: look_at_voice_filtered
    launch: {pkg: "jn0_bringup", path: "launch/jn0_bhvr_look_at.launch"}
    # Same as the other behavior, but with filtered input.
    input: # Automatically remapped to root.
        # Other syntax:
        - pose: {src: source_pose, filtered: true}
        - second_pose
    output:
        - look_at_pose
    priority: 15

- procmodule:
    name: manyears 
    launch: {pkg: "jn0_bringup", path: "launch/jn0_manyears.launch"}
    input:
        # Available filter types are GenericDivider and GenericDividerAD
        # (auto-disconnects the input subscriber when the rate is 0 or nobody is
        # subscribed on the output).
        - audio_stream: {type: GenericDivider}
        - second_input: {filtered: false}
    output: # Automatically remapped to root.
        - source_pose
    services:
        # Only provide basic remaps for services.
        # Still follow remap rules.
         - test_service

- strat:
    name: LocateVoiceFull
    class: LocateVoice
    utility: 100
    costs: {CPU: 100}
    dependencies: {} # utility_min
    # Modules can be omitted to define a strategy with only external
    # dependencies.
    modules: 
        - manyears:
            - audio_stream: 1 # Filter level for activation
- strat:
    name: LookAtVoice
    class: LookAtVoice
    utility: 1
    costs: {}
    dependencies: {LocateVoice: 100}
    modules:
        - look_at_voice

- strat:
    name: LookAtVoiceFiltered
    class: LookAtVoiceFiltered
    utility: 1
    costs: {}
    dependencies: {LocateVoice: 100}
    modules:
        - look_at_voice

- strat:
    name: GoToBehavior
    class: GoTo
    utility: 1
    costs: {}
    dependencies: {}
    modules: []
    # A strategy can specify custom bringup code.
    # This is mostly used to interpret parameters, see the following se_code
    # element.
    # It will be added at the end of filter calls.
    custom_bringup: "publishGoToGoal(params);"

# We can also specify custom JavaScript code that need to be interpreted by the 
# script engine at startup.
- custom_script: "function publishGoToGoal(g) {publishNavGoal('goto_pose', g.frame_id, g.x, g.y, g.t);}"

# And a set of rules to be given to the iw_observer:
- iwo_ruleset: "des_on:Say -> del -;"

# Defines a desire that is automatically added at startup.
- desire:
    id: test_desire
    type: LookAtVoice
    utility: 1
    intensity: 1.0
    params: ""
    security: False

# Overrides a previous behavior priority, useful for included files.
- behavior_priority: {name: 'look_at_voice', value: 50}

# Overrides the default arbitration type for a topic
- arbitration_type: {topic: 'look_at_pose', pkg: 'abtr_priority', type: 'GenericAsync'}

# Lists topics f or which an arbitration module is already available.
# This doesn't disable registration and exploitation monitoring
- integrated_arbitration:
    - cmd_eta
    - cmd_vel

# A motivation module is similar to a proc module, except without filters.
- motivation:
    name: base_motivation
    launch: {pkg: "jn0_demos", path: "launch/base_motivations.launch"}
    # Automatic HBBA remaps (add_desires, remove_desires, ...) (default: true):
    # The actual remaps still have to be declared (see
    # hbba_synth/hbba_cfg/common.yaml)
    auto_hbba_remap: true
    input:
        - sound_pose
    output:
        - person_pose

# Publishes an initial emotional intensity on emo_intensity (follows root
# remappings)
- emo_intensity: {name: 'Joy', value: 1.0}

